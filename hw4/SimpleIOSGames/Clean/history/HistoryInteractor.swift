//
//  HistoryInteractor.swift
//  SimpleIOSGames
//
//  Created by Mike I on 03.06.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HistoryBusinessLogic
{
    func fetchDiceResults(request: History.GetListDiceResult.Request)
    func fetchRPSResults(request: History.GetListRPSResult.Request)
    func fetchBestDiceResults(request: History.GetBestDiceResult.Request)
    func fetchBestRPSResults(request: History.GetBestRPSResults.Request)
}


protocol HistoryDataStore
{
    var diceResults: [DiceResult]? { get }
    var rpsResults: [RPSRoundResult]? { get }
    var bestRPSResults: RPSRoundResult? { get }
    var bestDiceResults: [(DiceResult,Float)]? { get }
}


class HistoryInteractor: HistoryBusinessLogic, HistoryDataStore
{
    var bestRPSResults: RPSRoundResult?
    var bestDiceResults: [(DiceResult, Float)]?
    var diceResults: [DiceResult]?
    var rpsResults: [RPSRoundResult]?
    var presenter: HistoryPresentationLogic?
    var worker: HistoryWorker?
    func fetchBestDiceResults(request: History.GetBestDiceResult.Request)
    {
        bestDiceResults = worker?.getBestDiceResults()
        if let bestDiceResults = bestDiceResults {
            let response = History.GetBestDiceResult.Response(diceResults: bestDiceResults)
            presenter?.presentBestDiceResults(response: response)
        }
    }
    func fetchBestRPSResults(request: History.GetBestRPSResults.Request)
    {
        bestRPSResults = worker?.getBestRPSResults()
        if let bestRPSResults = bestRPSResults {
            let response = History.GetBestRPSResults.Response(rpsResults: bestRPSResults)
            presenter?.presentBestRPSResults(response: response)
        }
    }
    func fetchDiceResults(request: History.GetListDiceResult.Request)
    {
        diceResults = worker?.getListDiceResult()
        if let diceResults = diceResults {
            let response = History.GetListDiceResult.Response(diceResults: diceResults)
            presenter?.presentListDiceResults(response: response)
        }
    }
    func fetchRPSResults(request: History.GetListRPSResult.Request)
    {
        rpsResults = worker?.getListRPSResult()
        if let rpsResults = rpsResults {
            let response = History.GetListRPSResult.Response(rpsResults: rpsResults)
            presenter?.presentListRPSResults(response: response)
        }
    }
}
